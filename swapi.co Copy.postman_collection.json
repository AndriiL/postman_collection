{
	"info": {
		"_postman_id": "8a4a6c3a-9092-40ee-b5fe-ed59969fd060",
		"name": "swapi.co Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "https://swapi.co/api/ first",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e72d7cb3-5ea8-4290-86e9-b7f75b196667",
						"exec": [
							"//1. Correct response format JSON",
							"pm.test(\"Correct response format JSON\", function() {",
							"    pm.response.to.have.jsonBody()",
							"});",
							"",
							"//2. We have all the declared fields in the response",
							"pm.test(\"Check that we have all declared fields\", function() {",
							"   const jsonData = pm.response.json();",
							"   pm.expect(jsonData).to.have.property(\"people\");",
							"   pm.expect(jsonData).to.have.property(\"planets\");",
							"   pm.expect(jsonData).to.have.property(\"films\");",
							"   pm.expect(jsonData).to.have.property(\"species\");",
							"   pm.expect(jsonData).to.have.property(\"vehicles\");",
							"   pm.expect(jsonData).to.have.property(\"starships\");",
							"});",
							"",
							"//3. Field value isn't NULL",
							"pm.test(\"Check if value isn't NULL\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.people).not.equal(null);",
							"    pm.expect(jsonData.planets).not.equal(null);",
							"    pm.expect(jsonData.films).not.equal(null);",
							"    pm.expect(jsonData.species).not.equal(null);",
							"    pm.expect(jsonData.vehicles).not.equal(null);",
							"    pm.expect(jsonData.starships).not.equal(null);",
							"pm.globals.get(\"variable_key\");",
							"});",
							"",
							"//4. Check if value int't empty",
							"pm.test(\"Check if value int't empty\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.people).not.equal(\"\");",
							"    pm.expect(jsonData.planets).not.equal(\"\");",
							"    pm.expect(jsonData.films).not.equal(\"\");",
							"    pm.expect(jsonData.species).not.equal(\"\");",
							"    pm.expect(jsonData.vehicles).not.equal(\"\");",
							"    pm.expect(jsonData.starships).not.equal(\"\");",
							"});",
							"",
							"//5. Check if field corresponds to a specific value",
							"pm.test(\"Check if field corresponds to a specific value\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.people).to.equal(\"https://swapi.co/api/people/\");",
							"    pm.expect(jsonData.planets).to.equal(\"https://swapi.co/api/planets/\");",
							"    pm.expect(jsonData.films).to.equal(\"https://swapi.co/api/films/\");",
							"    pm.expect(jsonData.species).to.equal(\"https://swapi.co/api/species/\");",
							"    pm.expect(jsonData.vehicles).to.equal(\"https://swapi.co/api/vehicles/\");",
							"    pm.expect(jsonData.starships).to.equal(\"https://swapi.co/api/starships/\");",
							"});",
							"",
							"//6. Status code is 200",
							"pm.test(\"Status code is 200\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//7. Status message is ok",
							"pm.test(\"Status message is ok\", function() {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"//8. Response time is less than 1000ms",
							"pm.test(\"Response time is less than 1000ms\", function() {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"//9. There is a specific header in the response",
							"pm.test(\"There is a specific header in the response\", function() {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"//10. The response has a specific header with a specific value",
							"pm.test(\"The response has a specific header with a specific value\", function() {",
							"    pm.response.to.be.header(\"Content-Type\", \"application/json\");",
							"});",
							"",
							"//11. Cookie exists",
							"pm.test(\"Cookie exists\", function() {",
							"    pm.cookies.has(\"__cfduid\");",
							"});",
							"",
							"//12. Cookie has value",
							"pm.test(\"Cookie has value\", function() {",
							"    try{",
							"        var MY_COOKIE = pm.cookies.get(\"__cfduid\");",
							"        console.log(MY_COOKIE);",
							"    } catch(e) {",
							"        console.log(\"SOME PROBLEM WITH COOKIE ->\" + e);",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://swapi.co/api/",
					"protocol": "https",
					"host": [
						"swapi",
						"co"
					],
					"path": [
						"api",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "https://swapi.co/api/ valid",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5efe06c-6521-4ca4-8b23-bcf7dca39240",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"",
							"var schema = {",
							"    // specify the type of object",
							"    \"type\": \"object\",",
							"    // specify requires properties",
							"    \"required\": [\"people\", \"planets\", \"films\", \"species\", \"vehicles\", \"starships\"],",
							"    // describe the properties",
							"    \"properties\": {",
							"        \"people\": {\"type\":\"string\"},",
							"        \"planets\": {\"type\":\"string\"},",
							"        \"films\": {\"type\":\"string\"},",
							"        \"species\": {\"type\":\"string\"},",
							"        \"vehicles\": {\"type\":\"string\"},",
							"        \"starships\": {\"type\":\"string\"},",
							"    }",
							"};",
							"",
							"pm.test('Body is correct', function() {",
							"    pm.expect(tv4.validate(data, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://swapi.co/api/",
					"protocol": "https",
					"host": [
						"swapi",
						"co"
					],
					"path": [
						"api",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "https://swapi.co/api/ valid1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5efe06c-6521-4ca4-8b23-bcf7dca39240",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"",
							"var schema = {",
							"    \"type\":  \"object\",",
							"    \"required\": [\"name\", \"homeworld\", \"films\", \"species\", \"vehicles\", \"starships\"],",
							"    \"property\": {",
							"        \"name\":{\"type\": \"string\"},",
							"        \"homeworld\":{\"type\": \"string\"},",
							"        \"films\":{",
							"            \"type\": \"array\",",
							"            \"items\": {\"type\": \"string\"}",
							"          },",
							"          \"species\": {",
							"              \"type\": \"array\",",
							"              \"items\": {\"type\": \"string\"}",
							"          },",
							"          \"vehicles\": {",
							"              \"type\": \"array\",",
							"              \"items\": {\"type\": \"string\"}",
							"          },",
							"          \"starships\": {",
							"              \"type\": \"array\",",
							"              \"items\": {\"type\": \"string\"}",
							"          },",
							"        }",
							"};",
							"",
							"pm.test('Body is correct', function() {",
							"    pm.expect(tv4.validate(data, schema)).to.be.true;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://swapi.co/api/people/1",
					"protocol": "https",
					"host": [
						"swapi",
						"co"
					],
					"path": [
						"api",
						"people",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://228424af-161c-43ee-a2e6-ef1ccf7923b7.mock.pstmn.io",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://228424af-161c-43ee-a2e6-ef1ccf7923b7.mock.pstmn.io",
					"protocol": "https",
					"host": [
						"228424af-161c-43ee-a2e6-ef1ccf7923b7",
						"mock",
						"pstmn",
						"io"
					]
				}
			},
			"response": [
				{
					"name": "https://228424af-161c-43ee-a2e6-ef1ccf7923b7.mock.pstmn.io",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://228424af-161c-43ee-a2e6-ef1ccf7923b7.mock.pstmn.io",
							"protocol": "https",
							"host": [
								"228424af-161c-43ee-a2e6-ef1ccf7923b7",
								"mock",
								"pstmn",
								"io"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Sat, 31 Aug 2019 11:20:29 GMT"
						},
						{
							"key": "ETag",
							"value": "W/\"af-GpPmRW0ySclCbQDmlVYDXw7rYA4\""
						},
						{
							"key": "Server",
							"value": "nginx"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "x-srv-span",
							"value": "v=1;s=585ebd95949482db"
						},
						{
							"key": "x-srv-trace",
							"value": "v=1;t=e95297ec4a264fe3"
						},
						{
							"key": "Content-Length",
							"value": "148"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": {\n        \"name\": \"test\",\n        \"message\": \"succsess\"\n    }\n}"
				},
				{
					"name": "https://228424af-161c-43ee-a2e6-ef1ccf7923b7.mock.pstmn.io",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"Andrii\"}"
						},
						"url": {
							"raw": "https://228424af-161c-43ee-a2e6-ef1ccf7923b7.mock.pstmn.io/action",
							"protocol": "https",
							"host": [
								"228424af-161c-43ee-a2e6-ef1ccf7923b7",
								"mock",
								"pstmn",
								"io"
							],
							"path": [
								"action"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Sat, 31 Aug 2019 11:23:15 GMT"
						},
						{
							"key": "ETag",
							"value": "W/\"af-GpPmRW0ySclCbQDmlVYDXw7rYA4\""
						},
						{
							"key": "Server",
							"value": "nginx"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "x-srv-span",
							"value": "v=1;s=585ebd95949482db"
						},
						{
							"key": "x-srv-trace",
							"value": "v=1;t=e95297ec4a264fe3"
						},
						{
							"key": "Content-Length",
							"value": "74"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": {\n        \"name\": \"Andrii\",\n        \"status\":\"created\",\n        \"message\": \"succsess\"\n    }\n}"
				}
			]
		},
		{
			"name": "https://228424af-161c-43ee-a2e6-ef1ccf7923b7.mock.pstmn.io",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Andrii\"}\n{\"last name\":\"Leonov\"}"
				},
				"url": {
					"raw": "https://228424af-161c-43ee-a2e6-ef1ccf7923b7.mock.pstmn.io/action",
					"protocol": "https",
					"host": [
						"228424af-161c-43ee-a2e6-ef1ccf7923b7",
						"mock",
						"pstmn",
						"io"
					],
					"path": [
						"action"
					]
				}
			},
			"response": [
				{
					"name": "https://228424af-161c-43ee-a2e6-ef1ccf7923b7.mock.pstmn.io/action",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"Andrii\"}\n{\"last name\":\"Leonov\"}"
						},
						"url": {
							"raw": "https://228424af-161c-43ee-a2e6-ef1ccf7923b7.mock.pstmn.io/action",
							"protocol": "https",
							"host": [
								"228424af-161c-43ee-a2e6-ef1ccf7923b7",
								"mock",
								"pstmn",
								"io"
							],
							"path": [
								"action"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Sat, 31 Aug 2019 11:31:19 GMT"
						},
						{
							"key": "ETag",
							"value": "W/\"af-GpPmRW0ySclCbQDmlVYDXw7rYA4\""
						},
						{
							"key": "Server",
							"value": "nginx"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "x-srv-span",
							"value": "v=1;s=585ebd95949482db"
						},
						{
							"key": "x-srv-trace",
							"value": "v=1;t=e95297ec4a264fe3"
						},
						{
							"key": "Content-Length",
							"value": "88"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": {\n        \"name\": \"Andrii\",\n        \"status\": \"created\",\n        \"message\": \"succsess\"\n    }\n}"
				},
				{
					"name": "https://228424af-161c-43ee-a2e6-ef1ccf7923b7.mock.pstmn.io",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"Andrii\"}"
						},
						"url": {
							"raw": "https://228424af-161c-43ee-a2e6-ef1ccf7923b7.mock.pstmn.io/action",
							"protocol": "https",
							"host": [
								"228424af-161c-43ee-a2e6-ef1ccf7923b7",
								"mock",
								"pstmn",
								"io"
							],
							"path": [
								"action"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Sat, 31 Aug 2019 11:23:15 GMT"
						},
						{
							"key": "ETag",
							"value": "W/\"af-GpPmRW0ySclCbQDmlVYDXw7rYA4\""
						},
						{
							"key": "Server",
							"value": "nginx"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "x-srv-span",
							"value": "v=1;s=585ebd95949482db"
						},
						{
							"key": "x-srv-trace",
							"value": "v=1;t=e95297ec4a264fe3"
						},
						{
							"key": "Content-Length",
							"value": "74"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": {\n        \"name\": \"Andrii\",\n        \"status\":\"created\",\n        \"message\": \"succsess\"\n    }\n}"
				},
				{
					"name": "https://228424af-161c-43ee-a2e6-ef1ccf7923b7.mock.pstmn.io",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"Andrii\"}\n{\"lastname\":\"Leonov\"}"
						},
						"url": {
							"raw": "https://228424af-161c-43ee-a2e6-ef1ccf7923b7.mock.pstmn.io/action",
							"protocol": "https",
							"host": [
								"228424af-161c-43ee-a2e6-ef1ccf7923b7",
								"mock",
								"pstmn",
								"io"
							],
							"path": [
								"action"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Sat, 31 Aug 2019 11:32:29 GMT"
						},
						{
							"key": "ETag",
							"value": "W/\"af-GpPmRW0ySclCbQDmlVYDXw7rYA4\""
						},
						{
							"key": "Server",
							"value": "nginx"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "x-srv-span",
							"value": "v=1;s=585ebd95949482db"
						},
						{
							"key": "x-srv-trace",
							"value": "v=1;t=e95297ec4a264fe3"
						},
						{
							"key": "Content-Length",
							"value": "88"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": {\n        \"name\": \"Andrii\",\n        \"status\": \"created\",\n        \"message\": \"succsess\"\n    }\n}"
				}
			]
		}
	]
}